import requests

def get_weather(city):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ Open-Meteo API (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∫–ª—é—á–∞!)
    """
    if not city or not city.strip():
        return "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"
    
    city = city.strip()
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞
        geo_url = f"https://geocoding-api.open-meteo.com/v1/search?name={city}&count=1&language=ru"
        geo_response = requests.get(geo_url, timeout=10)
        geo_response.raise_for_status()
        geo_data = geo_response.json()
        
        if not geo_data.get('results'):
            return f"‚ùå –ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è."
        
        location = geo_data['results'][0]
        lat = location['latitude']
        lon = location['longitude']
        city_name = location.get('name', city)
        country = location.get('country', '')
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        weather_url = f"https://api.open-meteo.com/v1/forecast?latitude={lat}&longitude={lon}&current=temperature_2m,relative_humidity_2m,wind_speed_10m,weather_code&timezone=auto"
        weather_response = requests.get(weather_url, timeout=10)
        weather_response.raise_for_status()
        weather_data = weather_response.json()
        
        if 'current' not in weather_data:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ"
        
        current = weather_data['current']
        temp = current['temperature_2m']
        humidity = current['relative_humidity_2m']
        wind_speed = current['wind_speed_10m']
        weather_code = current['weather_code']
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ –ø–æ–≥–æ–¥—ã –≤ —Ç–µ–∫—Å—Ç
        weather_desc = get_weather_description(weather_code)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        temp_emoji = "ü•∂" if temp < 0 else "‚ùÑÔ∏è" if temp < 10 else "üå§Ô∏è" if temp < 20 else "‚òÄÔ∏è" if temp < 30 else "üî•"
        
        location_str = f"{city_name}, {country}" if country else city_name
        
        return (f"üåç –ü–æ–≥–æ–¥–∞ –≤ {location_str}:\n"
                f"{temp_emoji} –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {weather_desc}\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –∫–º/—á")
            
    except requests.exceptions.Timeout:
        return "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–≥–æ–¥—ã"
    except requests.exceptions.RequestException as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–≥–æ–¥—ã: {str(e)}"
    except KeyError as e:
        return f"‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API: {str(e)}"
    except Exception as e:
        return f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def get_weather_description(code):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–¥ –ø–æ–≥–æ–¥—ã –≤ —Ç–µ–∫—Å—Ç"""
    weather_codes = {
        0: "—è—Å–Ω–æ", 1: "–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ", 2: "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
        3: "–ø–∞—Å–º—É—Ä–Ω–æ", 45: "—Ç—É–º–∞–Ω", 48: "—Ç—É–º–∞–Ω", 51: "–ª–µ–≥–∫–∞—è –º–æ—Ä–æ—Å—å",
        53: "—É–º–µ—Ä–µ–Ω–Ω–∞—è –º–æ—Ä–æ—Å—å", 55: "—Å–∏–ª—å–Ω–∞—è –º–æ—Ä–æ—Å—å", 56: "–ª–µ–≥–∫–∞—è –ª–µ–¥—è–Ω–∞—è –º–æ—Ä–æ—Å—å",
        57: "—Å–∏–ª—å–Ω–∞—è –ª–µ–¥—è–Ω–∞—è –º–æ—Ä–æ—Å—å", 61: "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å", 63: "—É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å",
        65: "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å", 66: "–ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å", 67: "—Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å",
        71: "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥", 73: "—É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥", 75: "—Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥",
        77: "—Å–Ω–µ–∂–Ω—ã–µ –∑–µ—Ä–Ω–∞", 80: "–Ω–µ–±–æ–ª—å—à–∏–µ –ª–∏–≤–Ω–∏", 81: "—É–º–µ—Ä–µ–Ω–Ω—ã–µ –ª–∏–≤–Ω–∏",
        82: "—Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏", 85: "—Å–Ω–µ–∂–Ω—ã–µ –ª–∏–≤–Ω–∏", 86: "—Å–∏–ª—å–Ω—ã–µ —Å–Ω–µ–∂–Ω—ã–µ –ª–∏–≤–Ω–∏",
        95: "–≥—Ä–æ–∑–∞", 96: "–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º", 99: "—Å–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º"
    }
    return weather_codes.get(code, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")