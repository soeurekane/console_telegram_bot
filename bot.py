from weather import get_weather
from currency import convert_currency
from facts_quotes import get_fact, get_quote
from todo_list import add_task, show_tasks, complete_task, delete_task, get_todo_stats
from time_utils import get_current_time, get_time_in_major_cities

def print_help():
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
    """
    help_text = """
ü§ñ –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –¢–µ–ª–µ–≥—Ä–∞–º-–ë–æ—Ç
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üå§  –ü–æ–≥–æ–¥–∞:
  /weather [–≥–æ—Ä–æ–¥]  - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ

üí± –í–∞–ª—é—Ç–∞:
  /convert [—Å—É–º–º–∞] [–∏–∑_–≤–∞–ª—é—Ç—ã] [–≤_–≤–∞–ª—é—Ç—É] - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É
  –ü—Ä–∏–º–µ—Ä: /convert 100 USD RUB

üìö –§–∞–∫—Ç—ã –∏ —Ü–∏—Ç–∞—Ç—ã:
  /fact - –°–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
  /quote - –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞

üïê –í—Ä–µ–º—è:
  /time [–≤—Ä–µ–º–µ–Ω–Ω–∞—è_–∑–æ–Ω–∞] - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∑–æ–Ω–µ
  /timezones - –í—Ä–µ–º—è –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞

üìù –°–ø–∏—Å–æ–∫ –¥–µ–ª:
  /todo add [–∑–∞–¥–∞—á–∞] - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
  /todo list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
  /todo complete [–Ω–æ–º–µ—Ä] - –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π
  /todo delete [–Ω–æ–º–µ—Ä] - –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
  /todo stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á

‚ùì –ü—Ä–æ—á–µ–µ:
  /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  /exit - –í—ã–π—Ç–∏ –∏–∑ –±–æ—Ç–∞
"""
    print(help_text)

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞
    """
    print("ü§ñ –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –¢–µ–ª–µ–≥—Ä–∞–º-–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("üìù –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
    print("=" * 50)
    
    while True:
        try:
            command = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ").strip()
            
            if not command:
                continue
                
            if command.startswith('/'):
                parts = command.split()
                cmd = parts[0].lower()
                
                if cmd == '/exit':
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                    
                elif cmd == '/help':
                    print_help()
                    
                elif cmd == '/weather':
                    if len(parts) > 1:
                        city = ' '.join(parts[1:])
                        print(get_weather(city))
                    else:
                        print("‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥: /weather –ú–æ—Å–∫–≤–∞")
                        
                elif cmd == '/convert':
                    if len(parts) == 4:
                        try:
                            amount = parts[1]
                            from_curr = parts[2]
                            to_curr = parts[3]
                            print(convert_currency(amount, from_curr, to_curr))
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    else:
                        print("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /convert [—Å—É–º–º–∞] [–∏–∑] [–≤]")
                        print("–ü—Ä–∏–º–µ—Ä: /convert 100 USD RUB")
                        
                elif cmd == '/fact':
                    print("üìö –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:")
                    print(get_fact())
                    
                elif cmd == '/quote':
                    print("üí¨ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è:")
                    print(get_quote())
                    
                elif cmd == '/time':
                    if len(parts) > 1:
                        timezone = ' '.join(parts[1:])
                        print(get_current_time(timezone))
                    else:
                        print(get_current_time("UTC"))
                        
                elif cmd == '/timezones':
                    print(get_time_in_major_cities())
                    
                elif cmd == '/todo':
                    if len(parts) > 1:
                        subcmd = parts[1].lower()
                        
                        if subcmd == 'add' and len(parts) > 2:
                            task = ' '.join(parts[2:])
                            print(add_task(task))
                            
                        elif subcmd == 'list':
                            print(show_tasks())
                            
                        elif subcmd == 'complete' and len(parts) > 2:
                            print(complete_task(parts[2]))
                            
                        elif subcmd == 'delete' and len(parts) > 2:
                            print(delete_task(parts[2]))
                            
                        elif subcmd == 'stats':
                            print(get_todo_stats())
                            
                        else:
                            print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞ todo. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: add, list, complete, delete, stats")
                    else:
                        print("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /todo [add|list|complete|delete|stats]")
                        
                else:
                    print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
                    
            else:
                print("‚ùå –ö–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å /. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()